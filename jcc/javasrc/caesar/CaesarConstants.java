/* Generated By:JavaCC: Do not edit this line. CaesarConstants.java */
package caesar;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CaesarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PROGRAM = 1;
  /** RegularExpression Id. */
  int ENDPROGRAM = 2;
  /** RegularExpression Id. */
  int VAR = 3;
  /** RegularExpression Id. */
  int ARRAY = 4;
  /** RegularExpression Id. */
  int IF = 5;
  /** RegularExpression Id. */
  int ELSE = 6;
  /** RegularExpression Id. */
  int ENDIF = 7;
  /** RegularExpression Id. */
  int WHILE = 8;
  /** RegularExpression Id. */
  int ENDWHILE = 9;
  /** RegularExpression Id. */
  int FOR = 10;
  /** RegularExpression Id. */
  int IN = 11;
  /** RegularExpression Id. */
  int TO = 12;
  /** RegularExpression Id. */
  int ENDFOR = 13;
  /** RegularExpression Id. */
  int PRINTLN = 14;
  /** RegularExpression Id. */
  int CLASS = 15;
  /** RegularExpression Id. */
  int ENDCLASS = 16;
  /** RegularExpression Id. */
  int DEF = 17;
  /** RegularExpression Id. */
  int ENDDEF = 18;
  /** RegularExpression Id. */
  int NEW = 19;
  /** RegularExpression Id. */
  int COLON = 20;
  /** RegularExpression Id. */
  int COMMA = 21;
  /** RegularExpression Id. */
  int IDENT = 22;
  /** RegularExpression Id. */
  int ASSIGN = 23;
  /** RegularExpression Id. */
  int PLUS = 24;
  /** RegularExpression Id. */
  int MINUS = 25;
  /** RegularExpression Id. */
  int MULTIPLY = 26;
  /** RegularExpression Id. */
  int DIVIDE = 27;
  /** RegularExpression Id. */
  int LBRC = 28;
  /** RegularExpression Id. */
  int RBRC = 29;
  /** RegularExpression Id. */
  int LABRC = 30;
  /** RegularExpression Id. */
  int RABRC = 31;
  /** RegularExpression Id. */
  int EQ = 32;
  /** RegularExpression Id. */
  int NE = 33;
  /** RegularExpression Id. */
  int LT = 34;
  /** RegularExpression Id. */
  int GT = 35;
  /** RegularExpression Id. */
  int LE = 36;
  /** RegularExpression Id. */
  int GE = 37;
  /** RegularExpression Id. */
  int DOT = 38;
  /** RegularExpression Id. */
  int QUOTEDSTRING = 39;
  /** RegularExpression Id. */
  int REAL_CONST = 40;
  /** RegularExpression Id. */
  int INT_CONST = 41;
  /** RegularExpression Id. */
  int DIGIT = 42;
  /** RegularExpression Id. */
  int LETTER = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"program\"",
    "\"endprogram\"",
    "\"var\"",
    "\"array\"",
    "\"if\"",
    "\"else\"",
    "\"endif\"",
    "\"while\"",
    "\"endwhile\"",
    "\"for\"",
    "\"in\"",
    "\"..\"",
    "\"endfor\"",
    "\"println\"",
    "\"class\"",
    "\"endclass\"",
    "\"def\"",
    "\"enddef\"",
    "\"new\"",
    "\":\"",
    "\",\"",
    "<IDENT>",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\".\"",
    "<QUOTEDSTRING>",
    "<REAL_CONST>",
    "<INT_CONST>",
    "<DIGIT>",
    "<LETTER>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
  };

}
